<?xml version="1.0"?>
<doc>
    <assembly>
        <name>App.Metrics.AspNetCore.Core</name>
    </assembly>
    <members>
        <member name="M:App.Metrics.AspNetCore.DefaultMetricsResponseWriter.WriteAsync(Microsoft.AspNetCore.Http.HttpContext,App.Metrics.MetricsDataValueSource,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:App.Metrics.AspNetCore.Internal.NoOp.NoOpEnvResponseWriter.WriteAsync(Microsoft.AspNetCore.Http.HttpContext,App.Metrics.Infrastructure.EnvironmentInfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:App.Metrics.AspNetCore.Internal.NoOp.NoOpMetricsResponseWriter.WriteAsync(Microsoft.AspNetCore.Http.HttpContext,App.Metrics.MetricsDataValueSource,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:App.Metrics.MetricsExtensions">
            <summary>
                Provides extension methods on <see cref="T:App.Metrics.IMetrics" /> to simplify measuring web application metrics.
            </summary>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.DecrementActiveRequests(App.Metrics.IMetrics)">
            <summary>
                Decrements the number of active web requests.
            </summary>
            <param name="metrics">The metrics.</param>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.IncrementActiveRequests(App.Metrics.IMetrics)">
            <summary>
                Increments the number of active active requests.
            </summary>
            <param name="metrics">The metrics.</param>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.RecordClientHttpRequestError(App.Metrics.IMetrics,System.String,System.Int32,System.String)">
            <summary>
                Records metrics about a Clients HTTP request error, counts the total number of errors for each status code,
                measures the
                rate and percentage of HTTP error requests tagging by client id (if it exists) the endpoints route template and
                HTTP status code.
            </summary>
            <param name="metrics">The metrics.</param>
            <param name="routeTemplate">The route template of the endpoint.</param>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="clientId">The OAuth2 client identifier.</param>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.RecordEndpointsRequestTime(App.Metrics.IMetrics,System.String,System.String,System.Int64)">
            <summary>
                Records the time taken to execute an API's endpoint in nanoseconds. Tags metrics by OAuth2 client id (if it exists)
                and the endpoints route template.
            </summary>
            <param name="metrics">The metrics.</param>
            <param name="clientId">The OAuth2 client identifier, with track min/max durations by clientid.</param>
            <param name="routeTemplate">The route template of the endpoint.</param>
            <param name="elapsed">The time elapsed in executing the endpoints request.</param>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.RecordException(App.Metrics.IMetrics,System.String,System.String)">
            <summary>
                Records metrics around unhanded exceptions, counts the total number of errors for each exception type.
            </summary>
            <param name="metrics">The metrics.</param>
            <param name="routeTemplate">The route template of the endpoint.</param>
            <param name="exception">The type of exception.</param>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.RecordHttpRequestError(App.Metrics.IMetrics,System.String,System.Int32)">
            <summary>
                Records metrics about an HTTP request error, counts the total number of errors for each status code, measures the
                rate and percentage of HTTP error requests tagging by client id (if it exists) the endpoints route template and
                HTTP status code.
            </summary>
            <param name="metrics">The metrics.</param>
            <param name="routeTemplate">The route template of the endpoint.</param>
            <param name="httpStatusCode">The HTTP status code.</param>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.UpdateClientPostRequestSize(App.Metrics.IMetrics,System.Int64,System.String,System.String)">
            <summary>
                Records a metric for the size of a HTTP POST requests.
            </summary>
            <param name="metrics">The metrics.</param>
            <param name="value">The value.</param>
            <param name="clientId">The OAuth2 client identifier.</param>
            <param name="routeTemplate">The route template of the endpoint.</param>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.UpdateClientPutRequestSize(App.Metrics.IMetrics,System.Int64,System.String,System.String)">
            <summary>
                Records a metric for the size of a HTTP PUT requests.
            </summary>
            <param name="metrics">The metrics.</param>
            <param name="value">The value.</param>
            <param name="clientId">The OAuth2 client identifier to tag the histogram values.</param>
            <param name="routeTemplate">The route template of the endpoint.</param>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.UpdatePostRequestSize(App.Metrics.IMetrics,System.Int64)">
            <summary>
                Records a metric for the size of a HTTP POST requests.
            </summary>
            <param name="metrics">The metrics.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:App.Metrics.MetricsExtensions.UpdatePutRequestSize(App.Metrics.IMetrics,System.Int64)">
            <summary>
                Records a metric for the size of a HTTP PUT requests.
            </summary>
            <param name="metrics">The metrics.</param>
            <param name="value">The value.</param>
        </member>
    </members>
</doc>
