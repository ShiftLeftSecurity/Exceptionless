<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FluentRest</name>
    </assembly>
    <members>
        <member name="T:FluentRest.ContentSerializer">
            <summary>
            The shared default <see cref="T:FluentRest.IContentSerializer"/>.
            </summary>
        </member>
        <member name="P:FluentRest.ContentSerializer.Current">
            <summary>
            Gets the current singleton instance of <see cref="T:FluentRest.IContentSerializer"/>.
            </summary>
            <value>The current singleton instance of <see cref="T:FluentRest.IContentSerializer"/>.</value>
        </member>
        <member name="T:FluentRest.DictionaryExtensions">
            <summary>
            Extension methods for dictionary
            </summary>
        </member>
        <member name="M:FluentRest.DictionaryExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Adds a key/value pair to the dictionary if the key does not already exist.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key of the element to add.</param>
            <param name="valueFactory">The function used to generate a value for the key.</param>
            <returns>
            The value for the key. This will be either the existing value for the key if the key is already in the dictionary, or the new value for the key as returned by valueFactory if the key was not in the dictionary.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" /></exception>
        </member>
        <member name="M:FluentRest.DictionaryExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Attempts to add the specified key and value to the Dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary to perform an action upon.</param>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add.</param>
            <returns>
              <c>true</c> if the key/value pair was added to the Dictionary successfully. If the key already exists, this method returns <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" /></exception>
        </member>
        <member name="M:FluentRest.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)">
            <summary>
            Attempts to remove and return the value with the specified key from the Dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The Dictionary to perform an action upon.</param>
            <param name="key">The key of the element to remove and return.</param>
            <param name="value">When this method returns, value contains the object removed from the Dictionary or the default value if the operation failed.</param>
            <returns><c>true</c> if an object was removed successfully; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" /></exception>
        </member>
        <member name="M:FluentRest.DictionaryExtensions.TryUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,``1)">
            <summary>
            Compares the existing value for the specified key with a specified value, and if they are equal, updates the key with a third value.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary to perform an action upon.</param>
            <param name="key">The key whose value is compared with comparisonValue and possibly replaced.</param>
            <param name="newValue">The value that replaces the value of the element with key if the comparison results in equality.</param>
            <param name="comparisonValue">The value that is compared to the value of the element with key.</param>
            <returns><c>true</c> if the value with key was equal to comparisonValue and replaced with newValue; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if key is a <c>null</c> reference </exception>
        </member>
        <member name="T:FluentRest.FluentClient">
            <summary>
            Provides a fluent class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.
            </summary>
        </member>
        <member name="M:FluentRest.FluentClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.FluentClient" /> class.
            </summary>
            <param name="httpClient">The HTTP client.</param>
        </member>
        <member name="M:FluentRest.FluentClient.#ctor(System.Net.Http.HttpClient,FluentRest.IContentSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.FluentClient" /> class.
            </summary>
            <param name="httpClient">The HTTP client.</param>
            <param name="contentSerializer">The content serializer.</param>
        </member>
        <member name="P:FluentRest.FluentClient.ContentSerializer">
            <summary>
            Gets or sets the serializer used to convert to and from <see cref="T:System.Net.Http.HttpContent"/>.
            </summary>
            <value>
            The serializer used to convert to and from <see cref="T:System.Net.Http.HttpContent"/>.
            </value>
        </member>
        <member name="P:FluentRest.FluentClient.HttpClient">
            <summary>
            Gets the <see cref="P:FluentRest.FluentClient.HttpClient" /> used to send request.
            </summary>
            <value>
            The <see cref="P:FluentRest.FluentClient.HttpClient" /> used to send request.
            </value>
        </member>
        <member name="T:FluentRest.FluentClientExtensions">
             <summary>
            
             </summary>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.GetAsync(FluentRest.IFluentClient,System.Action{FluentRest.QueryBuilder})">
            <summary>
            Sends a GET request using specified fluent <paramref name="builder" /> as an asynchronous operation.
            </summary>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>
            The task object representing the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.GetAsync``1(FluentRest.IFluentClient,System.Action{FluentRest.QueryBuilder})">
            <summary>
            Sends a GET request using specified fluent <paramref name="builder"/> as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.PostAsync(FluentRest.IFluentClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a POST request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.PostAsync``1(FluentRest.IFluentClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a POST request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.PutAsync(FluentRest.IFluentClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a PUT request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.PutAsync``1(FluentRest.IFluentClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a PUT request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.PatchAsync(FluentRest.IFluentClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a PATCH request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.PatchAsync``1(FluentRest.IFluentClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a PATCH request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.DeleteAsync(FluentRest.IFluentClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a DELETE request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.DeleteAsync``1(FluentRest.IFluentClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a DELETE request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.SendAsync(FluentRest.IFluentClient,System.Action{FluentRest.SendBuilder})">
            <summary>
            Sends a request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.SendAsync``1(FluentRest.IFluentClient,System.Action{FluentRest.SendBuilder})">
            <summary>
            Sends a request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.FluentClientExtensions.SendAsync(FluentRest.IFluentClient,System.Net.Http.HttpRequestMessage)">
            <summary>
            Sends a request using specified request message as an asynchronous operation.
            </summary>
            <param name="fluentClient">The <see cref="T:FluentRest.IFluentClient"/> used to send request.</param>
            <param name="requestMessage">The request message to send.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fluentClient" /> or <paramref name="requestMessage" /> is <see langword="null" />.</exception>
        </member>
        <member name="T:FluentRest.FluentDispatcher">
            <summary>
            A class to send an HTTP request from a fluently built request message
            </summary>
        </member>
        <member name="M:FluentRest.FluentDispatcher.SendAsync(System.Net.Http.HttpClient,System.Net.Http.HttpRequestMessage)">
            <summary>
            Sends a request using specified fluent <paramref name="requestMessage" /> as an asynchronous operation.
            </summary>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient" /> used to send request.</param>
            <param name="requestMessage">The request message.</param>
            <returns>The HTTP response message return after request.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient"/> or <paramref name="requestMessage"/> is <see langword="null" />.</exception>
        </member>
        <member name="T:FluentRest.FluentProperties">
            <summary>
            Fluent property name constants
            </summary>
        </member>
        <member name="F:FluentRest.FluentProperties.RequestUrlBuilder">
            <summary>
            The request URL builder property name
            </summary>
        </member>
        <member name="F:FluentRest.FluentProperties.RequestFormData">
            <summary>
            The request form data property name
            </summary>
        </member>
        <member name="F:FluentRest.FluentProperties.RequestContentData">
            <summary>
            The request content data property name
            </summary>
        </member>
        <member name="F:FluentRest.FluentProperties.ContentSerializer">
            <summary>
            The content serializer property name
            </summary>
        </member>
        <member name="F:FluentRest.FluentProperties.CancellationToken">
            <summary>
            The cancellation token property name
            </summary>
        </member>
        <member name="F:FluentRest.FluentProperties.HttpCompletionOption">
            <summary>
            The HTTP completion option property name
            </summary>
        </member>
        <member name="T:FluentRest.FormBuilder">
            <summary>
            A fluent form post builder.
            </summary>
        </member>
        <member name="M:FluentRest.FormBuilder.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.FormBuilder"/> class.
            </summary>
            <param name="requestMessage">The fluent HTTP request being built.</param>
        </member>
        <member name="T:FluentRest.HeaderBuilder">
            <summary>
            Fluent header builder
            </summary>
        </member>
        <member name="M:FluentRest.HeaderBuilder.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.HeaderBuilder"/> class.
            </summary>
            <param name="requestMessage">The fluent HTTP request being built.</param>
        </member>
        <member name="T:FluentRest.HeaderBuilder`1">
            <summary>
            Fluent header builder
            </summary>
            <typeparam name="TBuilder">The type of the builder.</typeparam>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.HeaderBuilder`1"/> class.
            </summary>
            <param name="requestMessage">The fluent HTTP request being built.</param>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.Accept(System.String,System.Nullable{System.Double})">
            <summary>
            Append the media-type to the Accept header for an HTTP request.
            </summary>
            <param name="mediaType">The media-type header value.</param>
            <param name="quality">The quality associated with the header value.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.AcceptCharset(System.String,System.Nullable{System.Double})">
            <summary>
            Append the value to the Accept-Charset header for an HTTP request.
            </summary>
            <param name="value">The header value.</param>
            <param name="quality">The quality associated with the header value.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.AcceptEncoding(System.String,System.Nullable{System.Double})">
            <summary>
            Append the value to the Accept-Encoding header for an HTTP request.
            </summary>
            <param name="value">The header value.</param>
            <param name="quality">The quality associated with the header value.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.AcceptLanguage(System.String,System.Nullable{System.Double})">
            <summary>
            Append the value to the Accept-Language header for an HTTP request.
            </summary>
            <param name="value">The header value.</param>
            <param name="quality">The quality associated with the header value.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.Authorization(System.String,System.String)">
            <summary>
            Sets the value of the Authorization header for an HTTP request.
            </summary>
            <param name="scheme">The scheme to use for authorization.</param>
            <param name="parameter">The credentials containing the authentication information.</param>
            <returns>A fluent header builder.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.CacheControl(System.String)">
            <summary>
            Sets the value of the Cache-Control header for an HTTP request.
            </summary>
            <param name="value">The header value.</param>
            <returns>A fluent header builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.Expect(System.String,System.String)">
            <summary>
            Append the value of the Expect header for an HTTP request.
            </summary>
            <param name="name">The header name.</param>
            <param name="value">The header value.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.From(System.String)">
            <summary>
            Sets the value of the From header for an HTTP request.
            </summary>
            <param name="value">The header value.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.Host(System.String)">
            <summary>
            Sets the value of the Host header for an HTTP request.
            </summary>
            <param name="value">The header value.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.IfModifiedSince(System.Nullable{System.DateTimeOffset})">
            <summary>
            Sets the value of the If-Modified-Since header for an HTTP request.
            </summary>
            <param name="modifiedDate">The modified date.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.IfUnmodifiedSince(System.Nullable{System.DateTimeOffset})">
            <summary>
            Sets the value of the If-Unmodified-Since header for an HTTP request.
            </summary>
            <param name="modifiedDate">The modified date.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.ProxyAuthorization(System.String,System.String)">
            <summary>
            Sets the value of the Proxy-Authorization header for an HTTP request.
            </summary>
            <param name="scheme">The scheme to use for authorization.</param>
            <param name="parameter">The credentials containing the authentication information.</param>
            <returns>A fluent header builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="scheme"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.Range(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Sets the value of the Range header for an HTTP request.
            </summary>
            <param name="from">The position at which to start sending data.</param>
            <param name="to">The position at which to stop sending data.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.Referrer(System.Uri)">
            <summary>
            Sets the value of the Referrer header for an HTTP request.
            </summary>
            <param name="uri">The header URI.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.Referrer(System.String)">
            <summary>
            Sets the value of the Referrer header for an HTTP request.
            </summary>
            <param name="value">The header value.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.UserAgent(System.String)">
            <summary>
            Sets the value of the User-Agent header for an HTTP request.
            </summary>
            <param name="value">The header value.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="M:FluentRest.HeaderBuilder`1.MethodOverride(System.Net.Http.HttpMethod)">
            <summary>
            Sets the value of the X-HTTP-Method-Override header for an HTTP request.
            </summary>
            <param name="method">The HTTP method.</param>
            <returns>A fluent header builder.</returns>
        </member>
        <member name="T:FluentRest.HttpClientExtensions">
            <summary>
            Fluent extension methods for <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.GetAsync(System.Net.Http.HttpClient,System.Action{FluentRest.QueryBuilder})">
            <summary>
            Sends a GET request using specified fluent <paramref name="builder" /> as an asynchronous operation.
            </summary>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>
            The task object representing the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.GetAsync``1(System.Net.Http.HttpClient,System.Action{FluentRest.QueryBuilder})">
            <summary>
            Sends a GET request using specified fluent <paramref name="builder"/> as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.PostAsync(System.Net.Http.HttpClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a POST request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a POST request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.PutAsync(System.Net.Http.HttpClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a PUT request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a PUT request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.PatchAsync(System.Net.Http.HttpClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a PATCH request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.PatchAsync``1(System.Net.Http.HttpClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a PATCH request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.DeleteAsync(System.Net.Http.HttpClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a DELETE request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.DeleteAsync``1(System.Net.Http.HttpClient,System.Action{FluentRest.FormBuilder})">
            <summary>
            Sends a DELETE request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.SendAsync(System.Net.Http.HttpClient,System.Action{FluentRest.SendBuilder})">
            <summary>
            Sends a request using specified fluent builder as an asynchronous operation.
            </summary>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.HttpClientExtensions.SendAsync``1(System.Net.Http.HttpClient,System.Action{FluentRest.SendBuilder})">
            <summary>
            Sends a request using specified fluent builder as an asynchronous operation.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to send request.</param>
            <param name="builder">The fluent builder factory.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="httpClient" /> or <paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="T:FluentRest.HttpMessageExtensions">
            <summary>
            Extension method for <see cref="T:System.Net.Http.HttpRequestMessage"/>
            </summary>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.GetUrlBuilder(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the <see cref="T:FluentRest.UrlBuilder"/> from the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <returns>
            The <see cref="T:FluentRest.UrlBuilder"/> to modify the request message URI.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.SetUrlBuilder(System.Net.Http.HttpRequestMessage,FluentRest.UrlBuilder)">
            <summary>
            Sets the <see cref="T:FluentRest.UrlBuilder" /> on the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <param name="urlBuilder">The URL bulder to set on the properties dictionary.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage" /> is <see langword="null" /></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.GetContentData(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the content data from the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <returns>
            The content data to send for the request message.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.SetContentData(System.Net.Http.HttpRequestMessage,System.Object)">
            <summary>
            Sets the content data on the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <param name="contentData">The content data to send for the request message..</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage" /> is <see langword="null" /></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.GetFormData(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the form data property from the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <returns>
            The dictionary of for data to send in the request message.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.GetCompletionOption(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the completion option property from the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <returns>
            The <see cref="T:System.Net.Http.HttpCompletionOption"/> to use when sending the request message.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.SetCompletionOption(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
            <summary>
            Sets the completion option property on the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <param name="completionOption">The <see cref="T:System.Net.Http.HttpCompletionOption"/> to use when sending the request message.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.GetCancellationToken(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the cancellation token property from the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <returns>
            The <see cref="T:System.Threading.CancellationToken"/> to use when sending the request message.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.SetCancellationToken(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sets the cancellation token property on the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> to use when sending the request message.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.GetContentSerializer(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the content serializer property from the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <returns>
            The <see cref="T:FluentRest.IContentSerializer"/> to use when serializing content to send in the request message.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.SetContentSerializer(System.Net.Http.HttpRequestMessage,FluentRest.IContentSerializer)">
            <summary>
            Sets the content serializer property on the specified <paramref name="requestMessage" /> properties dictionary.
            </summary>
            <param name="requestMessage">The request message containing the property.</param>
            <param name="contentSerializer">The <see cref="T:FluentRest.IContentSerializer"/> to use when serializing content to send in the request message.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="requestMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.Synchronize(System.Net.Http.HttpRequestMessage)">
            <summary>
            Synchronizes the specified request message with the fluent properties.
            </summary>
            <param name="requestMessage">The request message.</param>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.DeserializeAsync``1(System.Net.Http.HttpResponseMessage,System.Boolean)">
            <summary>
            Deserialize the HTTP response message asynchronously.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="responseMessage">The response message to deserialize.</param>
            <param name="ensureSuccess">Throw an exception if the HTTP response was unsuccessful.</param>
            <returns>
            The data object deserialized from the HTTP response message.
            </returns>
            <exception cref="T:System.Net.Http.HttpRequestException">Response status code does not indicate success.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="responseMessage"/> is <see langword="null"/></exception>
        </member>
        <member name="M:FluentRest.HttpMessageExtensions.EnsureSuccessStatusCode(System.Net.Http.HttpResponseMessage,System.Boolean)">
            <summary>
            Throws an exception if the IsSuccessStatusCode property for the HTTP response is false.
            </summary>
            <param name="responseMessage">The response message.</param>
            <param name="includeContent">if set to <c>true</c> the response content is included in the exception.</param>
            <returns></returns>
            <exception cref="T:System.Net.Http.HttpRequestException">The HTTP response is unsuccessful.</exception>
        </member>
        <member name="T:FluentRest.HttpRequestHeaders">
            <summary>
            Contains the standard set of headers applicable to an HTTP request.
            </summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Accept">
            <summary>Content-Types that are acceptable</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.AcceptCharset">
            <summary>Character sets that are acceptable</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.AcceptEncoding">
            <summary>Acceptable encodings. See HTTP compression.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.AcceptLanguage">
            <summary>Acceptable languages for response</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.AcceptDatetime">
            <summary>Acceptable version in time</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Authorization">
            <summary>Authentication credentials for HTTP authentication</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.CacheControl">
            <summary>Used to specify directives that MUST be obeyed by all caching mechanisms along the request/response chain</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Connection">
            <summary>What type of connection the user-agent would prefer</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Cookie">
            <summary>an HTTP cookie previously sent by the server with Set-Cookie (below)</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.ContentLength">
            <summary>The length of the request body in octets (8-bit bytes)</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.ContentM5">
            <summary>A Base64-encoded binary MD5 sum of the content of the request body</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.ContentType">
            <summary>The MIME type of the body of the request (used with POST and PUT requests)</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.ContentEncoding">
            <summary>The content encoding</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Date">
            <summary>The date and time that the message was sent</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Expect">
            <summary>Indicates that particular server behaviors are required by the client</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.From">
            <summary>The email address of the user making the request</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Host">
            <summary>The domain name of the server (for virtual hosting), mandatory since HTTP/1.1. Although domain name are specified as case-insensitive[5][6], it is not specified whether the contents of the Host field should be interpreted in a case-insensitive manner[7] and in practice some implementations of virtual hosting interpret the contents of the Host field in a case-sensitive manner.[citation needed]</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.IfMatch">
            <summary>Only perform the action if the client supplied entity matches the same entity on the server. This is mainly for methods like PUT to only update a resource if it has not been modified since the user last updated it.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.IfModifiedSince">
            <summary>Allows a 304 Not Modified to be returned if content is unchanged</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.IfNoneMatch">
            <summary>Allows a 304 Not Modified to be returned if content is unchanged, see HTTP ETag</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.IfRange">
            <summary>If the entity is unchanged, send me the part(s) that I am missing; otherwise, send me the entire new entity</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.IfUnmodifiedSince">
            <summary>Only send the response if the entity has not been modified since a specific time.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.MaxForwards">
            <summary>Limit the number of times the message can be forwarded through proxies or gateways.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Pragma">
            <summary>Implementation-specific headers that may have various effects anywhere along the request-response chain.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.ProxyAuthorization">
            <summary>Authorization credentials for connecting to a proxy.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Range">
            <summary>Request only part of an entity. Bytes are numbered from 0.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Referer">
            <summary>This is the address of the previous web page from which a link to the currently requested page was followed. (The word �referrer� is misspelled in the RFC as well as in most implementations.)</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.TE">
            <summary>The transfer encodings the user agent is willing to accept: the same values as for the response header Transfer-Encoding can be used, plus the trailers value (related to the chunked transfer method) to notify the server it expects to receive additional headers (the trailers) after the last, zero-sized, chunk.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Upgrade">
            <summary>Ask the server to upgrade to another protocol.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.UserAgent">
            <summary>The user agent string of the user agent</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Via">
            <summary>Informs the server of proxies through which the request was sent.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.Warning">
            <summary>A general warning about possible problems with the entity body.</summary>
        </member>
        <member name="F:FluentRest.HttpRequestHeaders.MethodOverride">
            <summary>Used to specify an HTTP method override value.</summary>
        </member>
        <member name="T:FluentRest.HttpResponseHeaders">
            <summary>
            Contains the standard set of headers applicable to an HTTP response.
            </summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.AcceptRanges">
            <summary>What partial content range types this server supports</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Age">
            <summary>The age the object has been in a proxy cache in seconds</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Allow">
            <summary>Valid actions for a specified resource. To be used for a 405 Method not allowed</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.CacheControl">
            <summary>Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Connection">
            <summary>Options that are desired for the connection[17]</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ContentEncoding">
            <summary>The type of encoding used on the data. See HTTP compression.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ContentLanguage">
            <summary>The language the content is in</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ContentLength">
            <summary>The length of the response body in octets (8-bit bytes)</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ContentLocation">
            <summary>An alternate location for the returned data</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ContentMD5">
            <summary>A Base64-encoded binary MD5 sum of the content of the response</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ContentDisposition">
            <summary>An opportunity to raise a File Download dialogue box for a known MIME type with binary format or suggest a filename for dynamic content. Quotes are necessary with special characters.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ContentRange">
            <summary>Where in a full body message this partial message belongs</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ContentType">
            <summary>The MIME type of this content</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Date">
            <summary>The date and time that the message was sent</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ETag">
            <summary>An identifier for a specific version of a resource, often a message digest</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Expires">
            <summary>Gives the date/time after which the response is considered stale</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.LastModified">
            <summary>The last modified date for the requested object, inRFC 2822 format</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Link">
            <summary>Used to express a typed relationship with another resource, where the relation type is defined by RFC 5988</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Location">
            <summary>Used in redirection, or when a new resource has been created.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.P3P">
            <summary>This header is supposed to set P3P policy, in the form of P3P:CP=your_compact_policy. However, P3P did not take off,[22] most browsers have never fully implemented it, a lot of websites set this header with fake policy text, that was enough to fool browsers the existence of P3P policy and grant permissions for third party cookies.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Pragma">
            <summary>Implementation-specific headers that may have various effects anywhere along the request-response chain.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.ProxyAuthenticate">
            <summary>Request authentication to access the proxy.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Refresh">
            <summary>Used in redirection, or when a new resource has been created. This refresh redirects after 5 seconds. This is a proprietary, non-standard header extension introduced by Netscape and supported by most web browsers.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.RetryAfter">
            <summary>If an entity is temporarily unavailable, this instructs the client to try again after a specified period of time (seconds).</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Server">
            <summary>A name for the server</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.SetCookie">
            <summary>an HTTP cookie</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.StrictTransportSecurity">
            <summary>A HTTPS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Trailer">
            <summary>The Trailer general field value indicates that the given set of header fields is present in the trailer of a message encoded with chunked transfer-coding.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.TransferEncoding">
            <summary>The form of encoding used to safely transfer the entity to the user. Currently defined methods are:chunked, compress, deflate, gzip, identity.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Vary">
            <summary>Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Via">
            <summary>Informs the client of proxies through which the response was sent.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.Warning">
            <summary>A general warning about possible problems with the entity body.</summary>
        </member>
        <member name="F:FluentRest.HttpResponseHeaders.WWWAuthenticate">
            <summary>Indicates the authentication scheme that should be used to access the requested entity.</summary>
        </member>
        <member name="T:FluentRest.IContentSerializer">
            <summary>
            An <see langword="interface"/> defining an <see cref="T:System.Net.Http.HttpContent"/> serializer.
            </summary>
        </member>
        <member name="P:FluentRest.IContentSerializer.ContentType">
            <summary>
            Gets the content-type the serializer supports.
            </summary>
            <value>
            The content-type the serializer supports.
            </value>
        </member>
        <member name="M:FluentRest.IContentSerializer.SerializeAsync(System.Object)">
            <summary>
            Serializes the specified <paramref name="data"/> object asynchronous.
            </summary>
            <param name="data">The data object to serialize.</param>
            <returns>The <see cref="T:System.Net.Http.HttpContent"/> that the data object serialized to.</returns>
        </member>
        <member name="M:FluentRest.IContentSerializer.DeserializeAsync``1(System.Net.Http.HttpContent)">
            <summary>
            Deserialize the <see cref="T:System.Net.Http.HttpContent"/> asynchronously.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="content">The content to deserialize.</param>
            <returns>The data object deserialized from the HttpContent.</returns>
        </member>
        <member name="T:FluentRest.IFluentClient">
            <summary>
            Provides a fluent interface for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.
            </summary>
        </member>
        <member name="P:FluentRest.IFluentClient.HttpClient">
            <summary>
            Gets the <see cref="P:FluentRest.IFluentClient.HttpClient"/> used to send request.
            </summary>
            <value>
            The <see cref="P:FluentRest.IFluentClient.HttpClient"/> used to send request.
            </value>
        </member>
        <member name="P:FluentRest.IFluentClient.ContentSerializer">
            <summary>
            Gets or sets the serializer used to convert to and from <see cref="T:System.Net.Http.HttpContent"/>.
            </summary>
            <value>
            The serializer used to convert to and from <see cref="T:System.Net.Http.HttpContent"/>.
            </value>
        </member>
        <member name="T:FluentRest.JsonContentSerializer">
            <summary>
            A JSON content serializer.
            </summary>
        </member>
        <member name="M:FluentRest.JsonContentSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Create a new JSON content serializer with the specified settings.
            </summary>
            <param name="settings"></param>
        </member>
        <member name="P:FluentRest.JsonContentSerializer.Settings">
            <summary>
            Gets or sets the JSON serializer settings.
            </summary>
            <value>
            The JSON serializer settings.
            </value>
        </member>
        <member name="P:FluentRest.JsonContentSerializer.ContentType">
            <summary>
            Gets the content-type the serializer supports.
            </summary>
            <value>
            The content-type the serializer supports.
            </value>
        </member>
        <member name="M:FluentRest.JsonContentSerializer.SerializeAsync(System.Object)">
            <summary>
            Serializes the specified <paramref name="data"/> object asynchronous.
            </summary>
            <param name="data">The data object to serialize.</param>
            <returns>The <see cref="T:System.Net.Http.HttpContent"/> that the data object serialized to.</returns>
        </member>
        <member name="M:FluentRest.JsonContentSerializer.DeserializeAsync``1(System.Net.Http.HttpContent)">
            <summary>
            Deserialize the <see cref="T:System.Net.Http.HttpContent"/> asynchronously.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="content">The content to deserialize.</param>
            <returns>The data object deserialized from the HttpContent.</returns>
        </member>
        <member name="P:FluentRest.JsonContentSerializer.Default">
            <summary>
            Gets the current singleton instance of JsonContentSerializer.
            </summary>
            <value>The current singleton instance.</value>
            <remarks>
            An instance of JsonContentSerializer wont be created until the very first
            call to the sealed class. This is a CLR optimization that
            provides a properly lazy-loading singleton.
            </remarks>
        </member>
        <member name="T:FluentRest.PostBuilder`1">
            <summary>
            A fluent form post builder.
            </summary>
            <typeparam name="TBuilder">The type of the builder.</typeparam>
        </member>
        <member name="M:FluentRest.PostBuilder`1.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.PostBuilder`1"/> class.
            </summary>
            <param name="requestMessage">The fluent HTTP request being built.</param>
        </member>
        <member name="M:FluentRest.PostBuilder`1.FormValue(System.String,System.String)">
            <summary>
            Appends the specified <paramref name="name"/> and <paramref name="value"/> to the form post body.
            </summary>
            <param name="name">The form parameter name.</param>
            <param name="value">The form parameter value.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.FormValue``1(System.String,``0)">
            <summary>
            Appends the specified <paramref name="name" /> and <paramref name="value" /> to the form post body.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="name">The form parameter name.</param>
            <param name="value">The form parameter value.</param>
            <returns>
            A fluent request builder.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.FormValue``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,``0}})">
            <summary>
            Appends the specified key value pairs to the form post body.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="data">The form key value parameters.</param>
            <returns>
            A fluent request builder.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="data" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.FormValue(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Appends the specified key value pairs to the form post body.
            </summary>
            <param name="data">The form key value parameters.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="data" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.FormValueIf(System.Func{System.Boolean},System.String,System.String)">
            <summary>
            Appends the specified <paramref name="name"/> and <paramref name="value"/> to the form post body if the specified <paramref name="condition"/> is true.
            </summary>
            <param name="condition">If condition is true, form data will be added; otherwise ignore form data.</param>
            <param name="name">The form parameter name.</param>
            <param name="value">The form parameter value.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.FormValueIf``1(System.Func{System.Boolean},System.String,``0)">
            <summary>
            Appends the specified <paramref name="name" /> and <paramref name="value" /> to the form post body if the specified <paramref name="condition" /> is true.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="condition">If condition is true, form data will be added; otherwise ignore form data.</param>
            <param name="name">The form parameter name.</param>
            <param name="value">The form parameter value.</param>
            <returns>
            A fluent request builder.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.Content(System.Net.Http.HttpContent)">
            <summary>
            Sets the contents of the HTTP message with the <see cref="T:System.Net.Http.HttpContent"/> value.
            </summary>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> to be sent.</param>
            <returns>A fluent request builder.</returns>
            <remarks>Setting the content of the request overrides any calls to FormValue.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="content"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.Content``1(``0)">
            <summary>
            Sets the raw post body to the serialized content of the specified <paramref name="data"/> object.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="data">The data to be serialized.</param>
            <returns>A fluent request builder.</returns>
            <remarks>Setting the content of the request overrides any calls to FormValue.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.Content(System.IO.Stream,System.String)">
            <summary>
            Sets the raw post body to the contents of the stream.
            </summary>
            <param name="data">The data to be used for the post body.</param>
            <param name="contentType">The content media type.</param>
            <returns>A fluent request builder.</returns>
            <remarks>Setting the content of the request overrides any calls to FormValue.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="contentType"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.Content(System.Byte[],System.String)">
            <summary>
            Sets the raw post body to the contents of the byte array.
            </summary>
            <param name="data">The data to be used for the post body.</param>
            <param name="contentType">The content media type.</param>
            <returns>A fluent request builder.</returns>
            <remarks>Setting the content of the request overrides any calls to FormValue.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="contentType"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.PostBuilder`1.Content(System.String,System.String,System.Text.Encoding)">
            <summary>
            Sets the raw post body to the contents of the string value.
            </summary>
            <param name="data">The string value to be used for the post body.</param>
            <param name="contentType">The content media type.</param>
            <param name="encoding">The encoding to use for the content.</param>
            <returns>A fluent request builder.</returns>
            <remarks>Setting the content of the request overrides any calls to FormValue.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="contentType"/> is <see langword="null" />.</exception>
        </member>
        <member name="T:FluentRest.QueryBuilder">
            <summary>
            A fluent query builder.
            </summary>
        </member>
        <member name="M:FluentRest.QueryBuilder.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.QueryBuilder" /> class.
            </summary>
            <param name="requestMessage">The fluent HTTP request being built.</param>
        </member>
        <member name="T:FluentRest.QueryBuilder`1">
            <summary>
            A fluent query builder.
            </summary>
            <typeparam name="TBuilder">The type of the builder.</typeparam>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.QueryBuilder`1"/> class.
            </summary>
            <param name="requestMessage">The fluent HTTP request being built.</param>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.Header(System.Action{FluentRest.HeaderBuilder})">
            <summary>
            Start a fluent header builder.
            </summary>
            <param name="builder">The builder factory.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="builder" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.Header(System.String,System.String)">
            <summary>
            Sets HTTP header with the specified <paramref name="name"/> and <paramref name="value"/>.
            </summary>
            <param name="name">The header name.</param>
            <param name="value">The header value.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.HeaderIf(System.Func{System.Boolean},System.String,System.String)">
            <summary>
            Sets HTTP header with the specified <paramref name="name"/> and <paramref name="value"/> if the specified <paramref name="condition"/> is true.
            </summary>
            <param name="condition">If condition is true, header will be added; otherwise ignore header.</param>
            <param name="name">The header name.</param>
            <param name="value">The header value.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.BaseUri(System.Uri)">
            <summary>
            Sets the base URI address used when sending requests.
            </summary>
            <param name="path">The path.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.BaseUri(System.String)">
            <summary>
            Sets the base URI address used when sending requests.
            </summary>
            <param name="path">The path.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.FullUri(System.Uri)">
            <summary>
            Sets the base URI from the specified <paramref name="path"/>.
            </summary>
            <param name="path">The full Uri path.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.FullUri(System.String)">
            <summary>
            Sets the base URI from the specified <paramref name="path"/>.
            </summary>
            <param name="path">The full Uri path.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="path" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.AppendPath(System.Uri)">
            <summary>
            Appends the specified <paramref name="path"/> to the BaseUri of the request.
            </summary>
            <param name="path">The path to append.</param>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.AppendPath(System.String)">
            <summary>
            Appends the specified <paramref name="path" /> to the BaseUri of the request.
            </summary>
            <param name="path">The path to append.</param>
            <returns>
            A fluent request builder.
            </returns>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.AppendPath``1(``0)">
            <summary>
            Appends the specified <paramref name="path" /> to the BaseUri of the request.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="path">The path to append.</param>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.AppendPath(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends the specified <paramref name="paths"/> to the BaseUri of the request.
            </summary>
            <param name="paths">The paths to append.</param>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.AppendPath(System.String[])">
            <summary>
            Appends the specified <paramref name="paths"/> to the BaseUri of the request.
            </summary>
            <param name="paths">The paths to append.</param>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.QueryString(System.String,System.String)">
            <summary>
            Appends the specified <paramref name="name"/> and <paramref name="value"/> to the request Uri.
            </summary>
            <param name="name">The query parameter name.</param>
            <param name="value">The query parameter value.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.QueryString``1(System.String,``0)">
            <summary>
            Appends the specified <paramref name="name" /> and <paramref name="value" /> to the request Uri.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="name">The query parameter name.</param>
            <param name="value">The query parameter value.</param>
            <returns>
            A fluent request builder.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.QueryStringIf(System.Func{System.Boolean},System.String,System.String)">
            <summary>
            Appends the specified <paramref name="name"/> and <paramref name="value"/> to the request Uri if the specified <paramref name="condition"/> is true.
            </summary>
            <param name="condition">If condition is true, query string will be added; otherwise ignore query string.</param>
            <param name="name">The query parameter name.</param>
            <param name="value">The query parameter value.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.QueryBuilder`1.QueryStringIf``1(System.Func{System.Boolean},System.String,``0)">
            <summary>
            Appends the specified <paramref name="name" /> and <paramref name="value" /> to the request Uri if the specified <paramref name="condition" /> is true.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="condition">If condition is true, query string will be added; otherwise ignore query string.</param>
            <param name="name">The query parameter name.</param>
            <param name="value">The query parameter value.</param>
            <returns>
            A fluent request builder.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is <see langword="null" />.</exception>
        </member>
        <member name="T:FluentRest.RequestBuilder`1">
            <summary>
            A fluent request builder.
            </summary>
            <typeparam name="TBuilder">The type of the builder.</typeparam>
        </member>
        <member name="P:FluentRest.RequestBuilder`1.RequestMessage">
            <summary>
            Gets the fluent HTTP request being built.
            </summary>
            <value>
            The fluent HTTP request being built.
            </value>
        </member>
        <member name="M:FluentRest.RequestBuilder`1.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.RequestBuilder`1"/> class.
            </summary>
            <param name="requestMessage">The fluent HTTP request being built.</param>
        </member>
        <member name="M:FluentRest.RequestBuilder`1.CancellationToken(System.Threading.CancellationToken)">
            <summary>
            Sets the cancellation token to cancel the request operation.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.RequestBuilder`1.CompletionOption(System.Net.Http.HttpCompletionOption)">
            <summary>
            Sets when the operation should complete (as soon as a response is available or after reading the whole response content).
            </summary>
            <param name="completionOption">When the operation should complete.</param>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.RequestBuilder`1.State(System.String,System.Object)">
            <summary>
            Sets a state value on the request.
            </summary>
            <param name="key">The state key.</param>
            <param name="value">The state value.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentException">Argument is null or empty</exception>
        </member>
        <member name="T:FluentRest.RequestExtensions">
            <summary>
            Extension methods for requests
            </summary>
        </member>
        <member name="M:FluentRest.RequestExtensions.BearerToken``1(``0,System.String)">
            <summary>
            Set the bearer authorization token header. Authorization: Bearer abcdef
            </summary>
            <typeparam name="TBuilder">The type of the builder.</typeparam>
            <param name="builder">The builder to add header to.</param>
            <param name="token">The bearer authorization token.</param>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.RequestExtensions.BasicAuthorization``1(``0,System.String,System.String)">
            <summary>
            Set basic authorization header from the specified username and password. Authorization: Basic abcdef
            </summary>
            <typeparam name="TBuilder">The type of the builder.</typeparam>
            <param name="builder">The builder to add header to.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="T:FluentRest.SendBuilder">
            <summary>
            A fluent send request builder.
            </summary>
        </member>
        <member name="M:FluentRest.SendBuilder.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.SendBuilder"/> class.
            </summary>
            <param name="requestMessage">The fluent HTTP request being built.</param>
        </member>
        <member name="M:FluentRest.SendBuilder.Method(System.Net.Http.HttpMethod)">
            <summary>
            Sets HTTP request method.
            </summary>
            <param name="method">The header request method.</param>
            <returns>A fluent request builder.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="method" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:FluentRest.SendBuilder.Post">
            <summary>
            Sets HTTP request method to POST.
            </summary>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.SendBuilder.Put">
            <summary>
            Sets HTTP request method to PUT.
            </summary>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.SendBuilder.Patch">
            <summary>
            Sets HTTP request method to PATCH.
            </summary>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="M:FluentRest.SendBuilder.Delete">
            <summary>
            Sets HTTP request method to DELETE.
            </summary>
            <returns>A fluent request builder.</returns>
        </member>
        <member name="T:FluentRest.UrlBuilder">
            <summary>
            Build and modify uniform resource locator (URL)
            </summary>
        </member>
        <member name="M:FluentRest.UrlBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.UrlBuilder"/> class.
            </summary>
        </member>
        <member name="M:FluentRest.UrlBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.UrlBuilder"/> with the specified <paramref name="uri"/>.
            </summary>
            <param name="uri">A URI string.</param>
            <exception cref="T:System.ArgumentNullException">uri is null</exception>
        </member>
        <member name="M:FluentRest.UrlBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentRest.UrlBuilder"/> with the specified <paramref name="uri"/>.
            </summary>
            <param name="uri">An instance of the <see cref="T:System.Uri"/> class</param>
            <exception cref="T:System.ArgumentNullException">uri is null</exception>
        </member>
        <member name="P:FluentRest.UrlBuilder.Scheme">
            <summary>
            Gets the scheme name of the Url.
            </summary>
            <value>
            The scheme name of the Url.
            </value>
        </member>
        <member name="P:FluentRest.UrlBuilder.UserName">
            <summary>
            Gets the user name associated with the user that accesses the Url.
            </summary>
            <value>
            The user name associated with the user that accesses the Url.
            </value>
        </member>
        <member name="P:FluentRest.UrlBuilder.Password">
            <summary>
            Gets the password associated with the user that accesses the Url.
            </summary>
            <value>
            The password associated with the user that accesses the Url.
            </value>
        </member>
        <member name="P:FluentRest.UrlBuilder.Host">
            <summary>
            Gets the Domain Name System (DNS) host name or IP address of a server.
            </summary>
            <value>
            The Domain Name System (DNS) host name or IP address of a server.
            </value>
        </member>
        <member name="P:FluentRest.UrlBuilder.Port">
            <summary>
            Gets the port number of the Url.
            </summary>
            <value>
            The port number of the Url.
            </value>
        </member>
        <member name="P:FluentRest.UrlBuilder.Path">
            <summary>
            Gets the path segment collection to the resource referenced by the Url.
            </summary>
            <value>
            The path segment collection to the resource referenced by the Url.
            </value>
        </member>
        <member name="P:FluentRest.UrlBuilder.Query">
            <summary>
            Gets the query string dictionary information included in the Url.
            </summary>
            <value>
            The query string dictionary information included in the Url.
            </value>
        </member>
        <member name="P:FluentRest.UrlBuilder.Fragment">
            <summary>
            Gets the fragment portion of the Url.
            </summary>
            <value>
            The fragment portion of the Url.
            </value>
        </member>
        <member name="M:FluentRest.UrlBuilder.SetScheme(System.String)">
            <summary>
            Replace the schema name for the current Url.
            </summary>
            <param name="value">The schema name.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.SetUserName(System.String)">
            <summary>
            Replace the user name for the current Url.
            </summary>
            <param name="value">The user name associated with the user that access the Url.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.SetPassword(System.String)">
            <summary>
            Replace the password for the current Url.
            </summary>
            <param name="value">The password associated with the user that access the Url.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.SetHost(System.String)">
            <summary>
            Replace the Domain Name System (DNS) host name or IP address for the current Url.
            </summary>
            <param name="value">The Domain Name System (DNS) host name or IP address.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.SetPort(System.Int32)">
            <summary>
            Replace the port number for the current Url.
            </summary>
            <param name="value">The port number.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.SetPort(System.String)">
            <summary>
            Replace the port number for the current Url.
            </summary>
            <param name="value">The port number.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.SetFragment(System.String)">
            <summary>
            Replace the fragment portion for the current Url.
            </summary>
            <param name="value">The fragment portion.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendPath(System.Uri)">
            <summary>
            Appends a path segment to the current Url.
            </summary>
            <param name="path">The path segment to append.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendPath(System.String)">
            <summary>
            Appends a path segment to the current Url.
            </summary>
            <param name="path">The path segment to append.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendPath``1(``0)">
            <summary>
            Appends a path segment to the current Url.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="path">The path segment to append.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendPath(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends the path segments to the current Url.
            </summary>
            <param name="paths">The path segments to append.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendPaths(System.String[])">
            <summary>
            Appends the path segments to the current Url.
            </summary>
            <param name="paths">The path segments to append.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendPathFormat(System.String,System.Object[])">
            <summary>
            Appends a string formatted path segment to the current Url.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="arguments">An array that contains zero or more objects to format.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.SetPath(System.String)">
            <summary>
            Replace the entire path for the current Url.  The <see cref="P:FluentRest.UrlBuilder.Path"/> collection is replaced with this path.
            </summary>
            <param name="path">The path segment to set.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendQuery(System.String,System.String)">
            <summary>
            Appends the query string name and value to the current url.
            </summary>
            <param name="name">The query string name.</param>
            <param name="value">The query string value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">name is <c>null</c></exception>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendQuery``1(System.String,``0)">
            <summary>
            Appends the query string name and value to the current url.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="name">The query string name.</param>
            <param name="value">The query string value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">name is <c>null</c></exception>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendQueryIf(System.Func{System.Boolean},System.String,System.String)">
            <summary>
            Conditionally appends the query string name and value to the current url if the specified <paramref name="condition" /> is <c>true</c>.
            </summary>
            <param name="condition">The condition on weather the query string is appended.</param>
            <param name="name">The query string name.</param>
            <param name="value">The query string value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">name is <c>null</c></exception>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendQueryIf``1(System.Func{System.Boolean},System.String,``0)">
            <summary>
            Conditionally appends the query string name and value to the current url if the specified <paramref name="condition" /> is <c>true</c>.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="condition">The condition on weather the query string is appended.</param>
            <param name="name">The query string name.</param>
            <param name="value">The query string value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">name is <c>null</c></exception>
        </member>
        <member name="M:FluentRest.UrlBuilder.AppendQuery(System.String)">
            <summary>
            Appends the query string to the current url.
            </summary>
            <param name="queryString">The query string to append.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.SetQuery(System.String)">
            <summary>
            Replace the entire query string for the current Url.  The <see cref="P:FluentRest.UrlBuilder.Query"/> dictionary is replaced with this query string.
            </summary>
            <param name="queryString">The query string to set.</param>
            <returns></returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.ToUri">
            <summary>
            Returns a <see cref="T:System.Uri" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.Uri" /> that represents this instance.
            </returns>
        </member>
        <member name="M:FluentRest.UrlBuilder.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
    </members>
</doc>
